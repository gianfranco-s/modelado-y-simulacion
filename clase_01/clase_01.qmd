---
title: "Modelado Y Simulación - Clase 1"
author: "Gianfranco Salomone"
toc: true
number-sections: true
highlight-style: pygments
format: 
  html: 
    code-fold: true
    html-math-method: katex
  pdf: 
    geometry: 
      - top=30mm
      - left=20mm
    
jupyter: python3
---
https://youtu.be/sUroO7PXm5M?t=1172
https://ximera.osu.edu/ode

## Introducción
Objetivos de la materia
Material
Documentación
Qué es un modelo
Software

### Recomendaciones
* Tener un software para tomar notas. Pueden hacerlo en markdown, LaTex, google docs.
* Tener un directorio bien organizado
* Mantenerse al día con los TP. Para eso les dejaré la última hora de cursada libre.
* Leer el apunte de clase antes de la clase

## ¿Qué es un modelo?
Es la representación simplificada de un fenómeno real. Sirve para entender el comportamiento de un sistema, anticipar su comportamiento futuro, o mejorar sistemas existentes.

La simulación permite estudiar el comportamiento del sistema sin necesidad de construirlo físicamente, o experimentar de forma riesgosa o costosa.

En esta materia nos orientaremos a los modelos matemáticos, que representan fenómenos mediante ecuaciones.


## Clasificación de modelos

### Según su comportamiento
* Estáticos vs. Dinámicos: Si el tiempo es una variable relevante.
* Lineales vs. No Lineales: Relación entre entrada y salida.
* Tiempo Continuo vs. Tiempo Discreto: Cómo evolucionan las variables en el tiempo.
* Determinísticos vs. Estocásticos: Si hay incertidumbre o aleatoriedad.

### Según su derivación
* Basados en leyes fundamentales (física, química).
* De caja negra (empíricos): Basados en datos de entrada/salida, sin conocimiento interno.
* De caja gris: Combinación de ambos.


Durante las clases 1 y 2, vamos a repasar e introducir temas de modelado y simulación.


## Ejemplo de derivación de un modelo
Durante el resto de esta clase vamos a ocuparnos de derivar un matemático, basándonos en leyes de la Física, y propondremos posibles comportamientos, suponiendo las condiciones del sistema. También intentaremos encontrar los comportamientos que estamos asumiendo.

Finalmente, realizaremos la simulación.

### Modelado de un tanque de agua
Consideremos el caso del llenado de un tanque de agua.

![&#8203;](modelado_nivel_un_recipiente_sin_valvula.svg)

Nos interesa conocer cómo evoluciona el nivel de líquido dentro del tanque. Hay una cantidad de materia que ingresa al tanque y una cantidad de materia que egresa. En la relación de ambas, podremos hallar la evolución del nivel de fluido.


| Magnitud                   | Símbolo | Unidades SI   |
|:--------------------------:|:-------:|:-------------:|
| Tiempo                     | $t$     | $s$           |
| Caudal de ingreso          | $q_i$   | $m^3/s$       |
| Caudal de egreso           | $q_s$   | $m^3/s$       |
| Superficie del tanque      | $C$     | $m^2$         |
| Volumen dentro del tanque  | $V$     | $m^3$         |
| Nivel de fluido            | $h$     | $m$           |

: Magnitudes del ejemplo


El volumen dentro del tanque se calcula así:
$$ V = Ch $$

La ley de conservación de la masa se puede escribir así:
$$ \frac{dV}{dt} = q_i - q_s $$

Por lo tanto, reemplazando en la ecuación inicial:
$$ C\frac{dy}{dt} = q_i - q_s $$

El caudal de salida se puede considerar como proporcional a la presión en el fondo del recipiente (OJO). A su vez, la presión en el fondo del recipiente puede considerarse proporcional al nivel de fluido (OJO de nuevo):
$$ v_s \propto P_1 \propto h $$

Si la relación es de proporcionalidad, se puede plantear un valor de $k$ que la convierta en igualdad:
$$ v_s \approx kh $$

Reemplazando en la ecuación de diferencia de caudales:
$$ C\frac{dh}{dt} = q_i - kh $$
$$ \dot{h}(t) = -\frac{k}{C} h(t) + \frac{1}{C} q_i(t) $$

Hemos arribado a una expresión que relaciona el nivel de fluido (variable bajo estudio), con el caudal ingresante (variable externa), y los parámetros del sistema. Supongamos que sabemos que el caudal de entrada, en el instante $t_0=0$ pasa de $0$ a $U_0$. Para $t>=0$, la ecuación diferencial puede expresarse así:
$$ \dot{h}(t) = -\frac{k}{C} y(t) + \frac{U_0}{C} $$

### Respuesta temporal cualitativa
Propongamos una posible evolución del nivel de fluido, considerando que “se abre la canilla” y se deja abierta.

Empecemos por graficar los ejes que nos interesa estudiar
```{python}
#| echo: false
import matplotlib.pyplot as plt

# create two side-by-side axes sharing the same x-axis
fig, (ax_qi, ax_qs) = plt.subplots(1, 2, sharex=False, figsize=(8,4))

# label the y-axes
ax_qi.set_ylabel('q_i')
ax_qs.set_ylabel('q_s')

ax_qi.set_xlabel('t')
ax_qs.set_xlabel('t')

# only bottom & left spines; no ticks or tick labels
for ax in (ax_qi, ax_qs):
    for spine in ['top','right']:
        ax.spines[spine].set_visible(False)
    ax.set_xticks([])    # remove x-ticks
    ax.set_yticks([])    # remove y-ticks

plt.tight_layout()
plt.show()
```

Luego propongamos posibles gráficas a mano alzada para cada una.

### Respuesta temporal analítica
Implica hallar una solución a la ecuación diferencial. Recordando las clases de cálculo, vemos que se trata de una:

* Ecuación Diferencial Ordinaria -- ODE, en inglés
* De primer orden -- hay una única derivada
* Lineal -- la variable no es argumento de ninguna otra función
* No homogénea -- hay un término independiente

La solución de esta ecuación diferencial es:
$$ h(t) = \frac{U_0}{k} + \left(h_0 - \frac{U_0}{k}\right) e^{-(k/C) t} $$

Consideremos el llenado desde vacío, con $h_0 = 0$
$$ h(t) = \left( 1 - e^{-(k/C) t} \right) \frac{U_0}{k} $$


### Gráfica de esta ecuación
Vamos a hacer un cambio de variables, para hacer más genérica la respuesta.

* Constante de tiempo: $C/k = \tau$  
* Normalización: $\hat{h} = h/(U_0/k)$

Haciendo esos cambios:
$$ \hat{h}(t) = 1-e^{-t/\tau} $$

GRÁFICA

### ¿Qué cosas estamos asumiendo?
OJO: $v_s \propto P_1 \propto h$
Hay una relación entre las variables de presión, rapidez de salida y nivel, pero no es lineal, sino que está establecida por la ley de Bernoulli:
$$ P_h + \frac{1}{2} \rho v_h^2 + \rho g h =  P_2 + \frac{1}{2} \rho v_s^2 + \rho g h_s $$

El lado izquierdo de la ecuación corresponde a la superficie del fluido. Allí, la presión es la presión atmosférica, dado que el recipiente se encuentra abierto: $P_h=p_{atm}$

El lado derecho corresponde al punto de salida, que también está abierto, de manera que $P_h=p_{atm}$. Si ponemos en este punto el origen de coordenadas, también podemos establecer que $h_s=0$ (OJO! No es válido si el tamaño del desagote es grande.)

Nótese que la presión del lado izquierdo de la ecuación **no** es la del fondo del tanque.



gy =(1/2)v2²

v2 A2 = q2 (q2 en nuestro ejemplo se llama v, lo que es un poco confuso)
q2 = A2 sqrt(2gy) 

Esta ecuación nos llevaría a una ED no-lineal… nos vamos a ocupar de eso más adelante
Simulación en MATLAB
Definiremos A=1, k=0,3, u=10, tfinal=50

Ejemplo de script
% Modelos y Simulación
% Clase 02
% Ejemplo de script:
 
clc;
clear all;
 
% u:       control
% tfinal:  tiempo final
% yo:      nivel inicial
 
% Inicialización de variables:
u = 10;
tfinal = 50;
y0 = 4;
 
% Constantes del sistema:
k = 0.3;
A = 1;
 
% Defino la ecuación diferencial,
% primero la var indep, luego la dependiente.
dy = @(t,y) -k*y/A + u/A
 
% Para usar la función dy: la evaluaremos para t = 3, y = 4
dy(3,4)
 
% Gráfica de la función y, una vez resuelta la ecuación diferencial:
[t,y] = ode23(dy,[0,tfinal],y0);
plot(t,y);
title('Respuesta de y(t)');
xlabel('Tiempo [seg]');
ylabel('Nivel del tanque [m]');
 
grid


Ejemplo de función
Para construir una función se usa la sintaxis:
function [ output_args ] = <nombre> ( input_args )

end

Se recomienda que el nombre de la función coincida con el nombre del archivo .m; el nombre de este último es el que usará MatLab para llamar a la función.

function [t,y] = MyS_02_tank1_func(u,tfinal,y0)
% Modelos y Simulación
% Clase 02
% Ejemplo de función
 
% Argumentos:
% u:       control
% tfinal:  tiempo final
% y0:      nivel inicial
 
 
 
clf  % Limpia la figura abierta
k = 0.3;
A = 1;
 
% Defino la función, primero la var indep, luego la dependiente.
dy = @(t,y) -k*y/A + u/A;
 
% Se guarda en las variables t e y los valores de la resolución numérica de
% la ecuación diferencial.
[t,y] = ode23(dy,[0,tfinal],y0);
plot(t,y)
title('Respuesta de y(t)');
xlabel('Tiempo [seg]');
ylabel('Nivel del tanque [m]');
grid
 
end
 
 
Luego, en la ventana de comandos se invoca la función con el nombre de archivo:





